---

## 📁 3. README.md - 완전한 사용 설명서

```markdown
# 🏪 클리어런스 매장 관리 시스템

**실시간 재고 현황 및 판매 분석을 위한 AI 기반 종합 웹 대시보드**

![Version](https://img.shields.io/badge/version-2.0-blue)
![Python](https://img.shields.io/badge/python-3.8+-green)
![Streamlit](https://img.shields.io/badge/streamlit-1.28+-red)
![License](https://img.shields.io/badge/license-MIT-yellow)

## 🚀 주요 기능

### 📈 1. 종합 대시보드
- **실시간 KPI**: 총 상품 수, 매출액, 평균 할인율, 총 판매량
- **시각적 분석**: 매장별 매출, 카테고리별 분포, BIZ별 성과, 할인율 분포
- **인터랙티브 차트**: Plotly 기반 고품질 시각화

### 🏪 2. 매장별 실적 모니터링
- **매장 선택형 분석**: 5개 매장별 맞춤 대시보드
- **카테고리 성과**: 스캐터 플롯으로 성과 매트릭스 분석
- **기간별 트렌드**: 3일~21일 판매 추이 라인 차트
- **필터링 시스템**: 카테고리, 성별, 최소 판매량 필터
- **데이터 다운로드**: 매장별 CSV 다운로드 지원

### 📊 3. 고급 분석 대시보드
- **5가지 분석 모드**: 매출 트렌드, 할인 효과, 재고 회전율, 상품 성과, 시장 세그먼트
- **상관관계 분석**: 할인율 vs 판매량 상관계수 자동 계산
- **할인 구간 분석**: 할인 구간별 성과 비교
- **시나리오 분석**: 가격 변동 시뮬레이션

### 📧 4. 자동 이메일 리포트
- **일일 요약 리포트**: 핵심 지표 자동 생성
- **매장별 성과 요약**: 5개 매장 성과 한눈에
- **KPI 분석**: 5개 핵심 지표 평가 및 등급화
- **권장 액션**: AI 기반 개선 방안 제시
- **발송 설정**: 수동/자동 발송, 시간 설정
- **다중 포맷**: TXT, HTML 리포트 지원

### 📥 5. AI 스마트 분석
- **AI 종합점수**: 45-98점 자동 계산 알고리즘
- **위험도 자동 분류**: 낮음/보통/높음 3단계 분류
- **수익성 등급**: A/B/C/D 4등급 자동 등급화
- **맞춤형 액션**: 5가지 추천 액션 플랜
- **예상수익성**: AI 기반 수익성 예측
- **다중 다운로드**: Excel(3시트), CSV 지원
- **필터링 뷰**: 위험도/등급/액션별 필터링

### 🎯 6. KPI 성과 점수판
- **5개 핵심 KPI**: 종합점수, 재고회전율, 할인효율성, 매출성과, 재고리스크
- **시각적 점수판**: 점수별 색상 구분 (우수/양호/보통/주의)
- **레이더 차트**: 현재 점수 vs 목표 점수 비교
- **등급 시스템**: 0-100점 4등급 시스템
- **개선 제안**: 점수별 맞춤형 개선 방안
- **월별 추이**: 6개월 KPI 추이 분석

### ⚠️ 7. 스마트 알림 센터
- **3단계 알림**: 긴급(빨강), 주의(노랑), 기회(초록)
- **자동 감지**: 과다재고, 판매부진, 고수익 기회
- **임계값 설정**: 사용자 정의 알림 기준
- **상세 분석**: 알림별 해당 상품 목록
- **액션 지원**: 이메일 발송, 데이터 다운로드, 처리 완료
- **건전성 체크**: 시스템 전반 건전성 모니터링

### 🧮 8. 스마트 계산기
- **할인율 계산기**: 기본/목표 할인율, 예상 매출 계산
- **수익률 계산기**: ROI, 마크업률, 손익분기 계산
- **마진 계산기**: 총마진, 순마진, 연간 수익 예측
- **재고회전율 계산기**: 회전율, 최적 재고량, 재고 가치
- **손익분기점 계산기**: BEP 분석, 시나리오 분석

## 📊 지원하는 데이터 구조

### 필수 컬럼 (20개)
| 컬럼명 | 타입 | 설명 | 예시 |
|--------|------|------|------|
| 매장명 | String | 판매 매장 | 나이키일산 |
| Biz | String | 비즈니스 분류 | AP, FW, EQ |
| 상품코드 | String | 고유 식별자 | PRD0001 |
| 상품명 | String | 제품명 | 나이키 에어맥스 270 |
| 실루엣 | String | 디자인 스타일 | 로우탑, 러닝 |
| CATE | String | 카테고리 | 신발, 운동화 |
| GENDER | String | 성별 분류 | MEN, WOMEN, UNISEX |
| 사이즈 | String | 제품 사이즈 | 250, 260 |
| 소비자 | Integer | 소비자가격 | 150000 |
| 지정할인율 | Integer | 지정 할인률 | 15 |
| 지정할인가 | Integer | 지정 할인가 | 127500 |
| 순매출할인율 | Integer | 실제 할인률 | 20 |
| 순매출할인가 | Integer | 실제 판매가 | 120000 |
| 월간누적판매량 | Integer | 월간 판매량 | 45 |
| 일별판매량 | Integer | 일일 판매량 | 3 |
| 최근3일판매량 | Integer | 3일간 판매량 | 8 |
| 최근7일판매량 | Integer | 7일간 판매량 | 18 |
| 최근14일판매량 | Integer | 14일간 판매량 | 32 |
| 최근21일판매량 | Integer | 21일간 판매량 | 45 |
| 최근입고일자 | Date | 입고 날짜 | 2024-01-15 |

## 🛠️ 설치 및 실행

### 로컬 환경 실행
```bash
# 1. 저장소 클론
git clone https://github.com/your-username/clearance-management-system.git
cd clearance-management-system

# 2. 가상환경 생성 (권장)
python -m venv venv
source venv/bin/activate  # Windows: venv\Scripts\activate

# 3. 패키지 설치
pip install -r requirements.txt

# 4. 애플리케이션 실행
streamlit run app.py

# 5. 브라우저에서 접속
# http://localhost:8501
